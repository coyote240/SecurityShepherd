apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: security-shepherd-build
spec:
  params:
    - name: repo-url
      type: string
    - name: branch-name
      type: string
    - name: image_tomcat
      type: string
    - name: container_tomcat
      type: string
    - name: tomcat_docker_version
      type: string
    - name: mysql_user
      type: string
    - name: mysql_pass
      type: string
    - name: container_mysql
      type: string
    - name: container_mongo
      type: string
    - name: tls_keystore_file
      type: string
    - name: tls_keystore_pass
      type: string
    - name: alias
      type: string
    - name: https_port
      type: string
  workspaces:
    - name: shared-data
  tasks:
    - name: fetch-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)
    - name: notify-clone
      taskRef:
        name: notify-slack
      runAfter: ["fetch-repo"]
      params:
        - name: channel
          value: "#github"
        - name: username
          value: Tekton
        - name: message
          value: Repository Cloned
        - name: hook
          value: https://hooks.slack.com/services/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
    - name: build-app
      taskRef:
        name: shepherd-build-app
      runAfter: ["fetch-repo"]
      workspaces:
        - name: source
          workspace: shared-data
    - name: docker-build
      taskRef:
        name: docker-build
      runAfter: ["build-app"]
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: image
          value: 833023401363.dkr.ecr.us-east-1.amazonaws.com/securityshepherd
        - name: insecure_registry
          value: 833023401363.dkr.ecr.us-east-1.amazonaws.com
        - name: build_extra_args
          value: "--build-arg IMAGE_TOMCAT=$(params.image_tomcat)  --build-arg CONTAINER_TOMCAT=$(params.container_tomcat)  --build-arg TOMCAT_DOCKER_VERSION=$(params.tomcat_docker_version)  --build-arg MYSQL_USER=$(params.mysql_user)  --build-arg MYSQL_PASS=$(params.mysql_pass)  --build-arg CONTAINER_MYSQL=$(params.container_mysql)  --build-arg CONTAINER_MONGO=$(params.container_mongo)  --build-arg TLS_KEYSTORE_FILE=$(params.tls_keystore_file)  --build-arg TLS_KEYSTORE_PASS=$(params.tls_keystore_pass)  --build-arg ALIAS=$(params.alias)  --build-arg HTTPS_PORT=$(params.https_port)"
#     - name: init-mongo
#       taskRef:
#         name: shepherd-init-mongo
#       runAfter: ["build-app"]
#     - name: init-mysql
#       taskRef:
#         name: shepherd-init-mysql
#       runAfter: ["build-app"]
